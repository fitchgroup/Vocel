## This workflow uses actions that are not certified by GitHub.
## They are provided by a third-party and are governed by
## separate terms of service, privacy policy, and support
## documentation.
#
#name: Dart
#
#on:
#  push:
#    branches: [ "main" ]
#  pull_request:
#    branches: [ "main" ]
#
#jobs:
#  version:
#    name: Create version number
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v1
#      - name: Fetch all history for all tags and branches
#        # do not have to declare secrets.GITHUB_TOKEN
#        run: |
#          git config remote.origin.url https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
#          git fetch --prune --depth=10000
#      - name: Install GitVersion
#        uses: gittools/actions/gitversion/setup@v0.9.7
#        with:
#          versionSpec: "5.x"
#      - name: Use GitVersion
#        id: gitversion
#        uses: gittools/actions/gitversion/execute@v0.9.7
#      - name: Create version.txt with nuGetVersion
#        run: echo ${{ steps.gitversion.outputs.nuGetVersion  }} > version.txt
#      - name: Upload version.txt
#        uses: actions/upload-artifact@v2
#        with:
#          name: gitversion
#          path: version.txt
#  build:
#    name: Build APK and Create release
#    needs: [version]
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - name: Restore the keyfile
#        run: |
#          echo "${{ secrets.RELEASE_KEYSTORE }}" > release.keystore.asc
#          gpg -d --passphrase "${{ secrets.RELEASE_KEYSTORE_PASSPHRASE }}" --batch release.keystore.asc > android/app/upload-keystore.jks
#      - name: Get version.txt
#        uses: actions/download-artifact@v2
#        with:
#          name: gitversion
#      - name: Create new file without newline char from version.txt
#        run: tr -d '\n' < version.txt > version1.txt
#      - name: Read version
#        id: version
#        uses: juliangruber/read-file-action@v1
#        with:
#          path: version1.txt
#      - name: Update version in YAML
#        run: sed -i 's/99.99.99+99/${{ steps.version.outputs.content }}+${{ github.run_number }}/g' pubspec.yaml
#      - name: Update KeyStore password in gradle properties
#        run: sed -i 's/#{KEYSTORE_PASS}#/${{ secrets.KEYSTORE_PASS }}/g' android/key.properties
#      - name: Update KeyStore key password in gradle properties
#        run: sed -i 's/#{KEYSTORE_KEY_PASS}#/${{ secrets.KEYSTORE_KEY_PASS }}/g' android/key.properties
#      - uses: actions/setup-java@v2
#        with:
#          distribution: 'zulu'
#          java-version: '12.x'
#      - uses: subosito/flutter-action@v2
#        with:
#          flutter-version: '3.7.0'
#      - run: flutter gen-l10n
#      - run: flutter pub get
#      # testing running to build IOS app
##      - run: flutter build ios
#      # - run: flutter test
#      - run: flutter build apk --release --split-per-abi
#      - run: flutter build appbundle --release
#      - name: Create a Release in GitHub
#        uses: ncipollo/release-action@v1
#        with:
#          artifacts: "build/app/outputs/apk/release/*.apk,build/app/outputs/bundle/release/app-release.aab"
#          token: ${{ secrets.TOKEN }}
#          tag: ${{ steps.version.outputs.content }}
#          commit: ${{ github.sha }}
#      - name: Upload app bundle
#        uses: actions/upload-artifact@v2
#        with:
#          name: appbundle
#          path: build/app/outputs/bundle/release/app-release.aab
##  release:
##    name: Release app to internal track
##    needs: [build]
##    runs-on: ubuntu-latest
##    steps:
##      - uses: actions/checkout@v1
##      - name: Get appbundle from artifacts
##        uses: actions/download-artifact@v2
##        with:
##          name: appbundle
##      - name: Release app to internal track
##        uses: r0adkll/upload-google-play@v1
##        with:
##          serviceAccountJsonPlainText: ${{ secrets.PLAYSTORE_ACCOUNT_KEY }}
##          packageName: com.app.package_name
##          releaseFiles: app-release.aab
##          track: alpha
##          status: completed

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Dart

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  version:
    name: Create version number
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Fetch all history for all tags and branches
        run: |
          git config remote.origin.url https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git fetch --prune --depth=10000
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: "5.x"
      - name: Use GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.7
      - name: Create version.txt with nuGetVersion
        run: echo ${{ steps.gitversion.outputs.nuGetVersion  }} > version.txt
      - name: Upload version.txt
        uses: actions/upload-artifact@v2
        with:
          name: gitversion
          path: version.txt
  build:
    name: Build APK and Create release
    needs: [version]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Restore the keyfile
        run: |
          echo "${{ secrets.RELEASE_KEYSTORE }}" > release.keystore.asc
          gpg -d --passphrase "${{ secrets.RELEASE_KEYSTORE_PASSPHRASE }}" --batch release.keystore.asc > android/app/upload-keystore.jks
      - name: Get version.txt
        uses: actions/download-artifact@v2
        with:
          name: gitversion
      - name: Create new file without newline char from version.txt
        run: tr -d '\n' < version.txt > version1.txt
      - name: Read version
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: version1.txt
      - name: Update version in YAML
        run: sed -i 's/99.99.99+99/${{ steps.version.outputs.content }}+${{ github.run_number }}/g' pubspec.yaml
      - name: Update KeyStore password in gradle properties
        run: sed -i 's/#{STORE_PASSWORD}#/${{ secrets.STORE_PASSWORD }}/g' android/key.properties
      - name: Update KeyStore key password in gradle properties
        run: sed -i 's/#{KEY_PASSWORD}#/${{ secrets.KEY_PASSWORD }}/g' android/key.properties
      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"
      - uses: subosito/flutter-action@v1
        with:
          channel: "beta"
      - run: flutter clean
      - run: flutter gen-l10n
      - run: flutter pub get
      - run: flutter build apk --release --split-per-abi
      - run: flutter build appbundle --release
      - name: Create a Release in GitHub
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/apk/release/*.apk,build/app/outputs/bundle/release/app-release.aab"
          token: ${{ secrets.TOKEN }}
          tag: ${{ steps.version.outputs.content }}
          commit: ${{ github.sha }}
          generateReleaseNotes: false
          makeLatest: legacy
          omitBody: false
          omitBodyDuringUpdate: false
          omitDraftDuringUpdate: false
          omitName: false
          omitNameDuringUpdate: false
          omitPrereleaseDuringUpdate: false
          removeArtifacts: false
          replacesArtifacts: true
          skipIfReleaseExists: false
          updateOnlyUnreleased: false
      - name: Upload app bundle
        uses: actions/upload-artifact@v2
        with:
          name: appbundle
          path: build/app/outputs/bundle/release/app-release.aab
  release:
    name: Release app to internal track
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Get appbundle from artifacts
        uses: actions/download-artifact@v2
        with:
          name: appbundle
      - name: Release app to internal track
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.PLAYSTORE_ACCOUNT_KEY }}
          packageName: com.fitchandvocel.vocel
          releaseFiles: app-release.aab
          track: alpha
          status: completed
          changesNotSentForReview: true
